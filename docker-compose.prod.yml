version: "3.8"

services:
  # MongoDB Database
  mongodb:
    image: mongo:latest
    container_name: digi-coders-mongodb-prod
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data_prod:/data/db
    networks:
      - digi-coders-network-prod

  # Backend API (Production)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: digi-coders-backend-prod
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DB_URL=mongodb://admin:password123@mongodb:27017/digi-coders?authSource=admin
      - PORT=5000
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
    volumes:
      - ./backend/static/uploads:/app/static/uploads
    networks:
      - digi-coders-network-prod

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: digi-coders-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./frontend/build:/usr/share/nginx/html
    depends_on:
      - frontend
      - backend
    networks:
      - digi-coders-network-prod

  # Frontend React App (Production)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: digi-coders-frontend-prod
    restart: unless-stopped
    environment:
      - REACT_APP_API_URL=http://localhost:5000
    depends_on:
      - backend
    networks:
      - digi-coders-network-prod

volumes:
  mongodb_data_prod:

networks:
  digi-coders-network-prod:
    driver: bridge
